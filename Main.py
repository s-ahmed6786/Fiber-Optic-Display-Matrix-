import machine
from neopixel import Neopixel
import time
import array

num_pixels = 256
pixels = Neopixel(num_pixels,0,16,"GRB")

red = pixels.colorHSV(0,255,255)
green = pixels.colorHSV(21845,255,255)
blue = pixels.colorHSV(43691,255,255)

def show(quarter,num,color):
    clear = pixels.colorHSV(0,0,0)
    q1 = [0,31,32,63,64,95,96,127,1,30,33,62,65,94,97,126,2,29,34,61,66,93,98,125,3,28,35,60,67,92,99,124,4,27,36,59,68,91,100,123,5,26,37,58,69,90,101,122,6,25,38,57,70,89,102,121,7,24,39,56,71,88,103,120
]
    q2 = [128,159,160,191,192,223,224,255,129,158,161,190,193,222,225,254,130,157,162,189,194,221,226,253,131,156,163,188,195,220,227,252,132,155,164,187,196,219,228,251,133,154,165,186,197,218,229,250,134,153,166,185,198,217,230,249,135,152,167,184,199,216,231,248
]
    q3 = [8,23,40,55,72,87,104,119,9,22,41,54,73,86,105,118,10,21,42,53,74,85,106,117,11,20,43,52,75,84,107,116,12,19,44,51,76,83,108,115,13,18,45,50,77,82,109,114,14,17,46,49,78,81,110,113,15,16,47,48,79,80,111,112
]
    q4 = [136,151,168,183,200,215,232,247,137,150,169,182,201,214,233,246,138,149,170,181,202,213,234,245,139,148,171,180,203,212,235,244,140,147,172,179,204,211,236,243,141,146,173,178,205,210,237,242,142,145,174,177,206,209,238,241,143,144,175,176,207,208,239,240
]
    numbers = [[0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0],
[0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0],
[0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0],
[0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0],
[0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
[0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0],
[0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0],
[0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
[0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0],
[0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0]]
    

    if quarter == 4:
        for i in range(0,64):
                if numbers[num][i] > 0:
                    pixels.set_pixel(q4[i],color,255)
                    pixels.show()
                    time.sleep(0.005)
                else:
                    pixels.set_pixel(q4[i],clear,0)
    elif quarter == 3:
        for i in range(0,64):
                if numbers[num][i] > 0:
                    pixels.set_pixel(q3[i],color,255)
                    pixels.show()
                    time.sleep(0.005)
                else:
                    pixels.set_pixel(q3[i],clear,0)
    elif quarter == 2:
        for i in range(0,64):
                if numbers[num][i] > 0:
                    pixels.set_pixel(q2[i],color,255)
                    pixels.show()
                    time.sleep(0.005)
                else:
                    pixels.set_pixel(q2[i],clear,0)
    else:
        for i in range(0,64):
                if numbers[num][i] > 0:
                    pixels.set_pixel(q1[i],color,255)
                    pixels.show()
                    time.sleep(0.005)
                else:
                    pixels.set_pixel(q1[i],clear,0)

def clearAll():
    clear = pixels.colorHSV(0,0,0)
    pixels.fill(clear,0)
    

def clearq(quarter):
    q1 = [0,31,32,63,64,95,96,127,1,30,33,62,65,94,97,126,2,29,34,61,66,93,98,125,3,28,35,60,67,92,99,124,4,27,36,59,68,91,100,123,5,26,37,58,69,90,101,122,6,25,38,57,70,89,102,121,7,24,39,56,71,88,103,120
]
    q2 = [128,159,160,191,192,223,224,255,129,158,161,190,193,222,225,254,130,157,162,189,194,221,226,253,131,156,163,188,195,220,227,252,132,155,164,187,196,219,228,251,133,154,165,186,197,218,229,250,134,153,166,185,198,217,230,249,135,152,167,184,199,216,231,248
]
    q3 = [8,23,40,55,72,87,104,119,9,22,41,54,73,86,105,118,10,21,42,53,74,85,106,117,11,20,43,52,75,84,107,116,12,19,44,51,76,83,108,115,13,18,45,50,77,82,109,114,14,17,46,49,78,81,110,113,15,16,47,48,79,80,111,112
]
    q4 = [136,151,168,183,200,215,232,247,137,150,169,182,201,214,233,246,138,149,170,181,202,213,234,245,139,148,171,180,203,212,235,244,140,147,172,179,204,211,236,243,141,146,173,178,205,210,237,242,142,145,174,177,206,209,238,241,143,144,175,176,207,208,239,240
]
    clear = pixels.colorHSV(0,0,0)
    if quarter ==1:
        for i in range(0,64):
            pixels.set_pixel(q1[i],clear,0)

    elif quarter ==2:
        for i in range(0,64):
            pixels.set_pixel(q2[i],clear,0)
    elif quarter ==3:
        for i in range(0,64):
            pixels.set_pixel(q2[i],clear,0)
    else:
        for i in range(0,64):
            pixels.set_pixel(q3[i],clear,0)

 
       

num1 = 1
num2 = 2
num3 = 0
num4 = 0
onum1=5
onum2=5
onum3=5
onum4=5
#   Timer Stuff: Need to figure out callback
# def inc4(intNUm):
#     intNUm=intNUm+1
# tim = machine.Timer()
# tim.init(freq=1, mode=machine.Timer.PERIODIC,callback=(inc4(num4)))

mode = 3

while mode == 1:
    
    for hue in range(0,65535,500):
        b = 10 if 100 else 100
        color=pixels.colorHSV(hue,255,100) 
         
        if num4 != onum4:  
            show(4,num4,color)
            onum4 = num4

        if num3 != onum3:
            show(3,num3,color)
            onum3 = num3 

        if num2 != onum2:
            show(2,num2,color)
            onum2=num2

        if num1 != onum1:
            show(1,num1,color) 
            onum1 = num1
        

        if num4 == 9:
            if num3 == 5:
                num3=0
                num4=0
                if num1 == 1 and num2 == 2:
                    num1=0
                    num2=1
                else:
                    num2 = num2+1
            else:
                num4=0
                num3=num3+1
        # Delete if using Timer
        else:
            num4=num4+1

        time.sleep_ms(60000)
        #----------------------#

#digits = [0,0,5,2]

def pomodoro( digits,color ):
    while True:    
        if (digits[0] != 0):
            digits[0] = digits[0]-1

        elif (digits[1] != 0):
            digits[0] = 9
            digits[1] = digits[1]-1

        elif (digits[2] != 0):
            digits[0] = 9
            digits[1] = 5
            digits[2] = digits[2]-1

        elif(digits[3] != 0):
            digits[0] = 9
            digits[1] = 5
            digits[2] = 9
            digits[3] = digits[3]-1

        else:
            digits[3] = digits[2] = digits[1] = digits[0] = 0
            break

        show(1,digits[3],color)
        show(2,digits[2],color)
        show(3,digits[1],color)
        show(4,digits[0],color)
        time.sleep_ms(1000)


while mode == 2:
    for hue in range(0,65535,500):
        color=pixels.colorHSV(hue,255,50) 

        arr1=[0,0,5,2]
        arr2=[0,0,0,5]

        pomodoro(arr1,color)
        pixels.fill(color,100)
        time.sleep(10)
        clearAll()

        pomodoro(arr2,color)
        pixels.fill(color,100)
        time.sleep(10)
        clearAll()
        
while mode == 3:
    for hue in range(0,65535,500):
        color=pixels.colorHSV(hue,255,100)
        pixels.fill(color)
        pixels.show()
        time.sleep(0.05)

        
    






        


    

            

        

        





                
            
        
